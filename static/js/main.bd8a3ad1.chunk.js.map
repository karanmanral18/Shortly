{"version":3,"sources":["components/CopyPanel/CopyPanel.module.css","components/VectorArt/VectorArt.module.css","hoc/Layout/Layout.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","assets/images/va.svg","hoc/Auxilary/Auxilary.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/CopyPanel/ShortPanel/ShortPanel.js","components/VectorArt/VectorArt.js","components/CopyPanel/CopyPanel.js","App.js","serviceWorker.js","index.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/CopyPanel/ShortPanel/ShortPanel.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css"],"names":["module","exports","aux","props","children","navaigationItem","className","classes","NavigationItem","href","link","active","navigationItems","NavigationItems","drawerToggle","onClick","clicked","DrawerToggle","toolbar","Toolbar","drawerToggleClicked","Logo","style","color","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attatchedClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Component","CopyPanel","copied","onCopy","onChange","value","target","ShortDiv","text","shortUrl","type","name","ShortInput","ShortButton","vectorArt","VectorArt","Jumbo","src","Va2","alt","longURL","isShortPresent","postDataHandler","longUrl","axios","post","then","response","console","log","data","clearDataHandler","form","Form","placeholder","event","Fragment","ShortPanel","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bd8a3ad1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"CopyPanel_Form__vQ9uV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"VectorArt\":\"VectorArt_VectorArt___eCcr\",\"Jumbo\":\"VectorArt_Jumbo__2fB_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__8ScQw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__28aTx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2apiP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3AtFL\"};","module.exports = __webpack_public_path__ + \"static/media/va.2a6a9346.svg\";","const aux = (props) => props.children;\r\nexport default aux;\r\n","import React from \"react\";\r\nimport { checkPropTypes } from \"prop-types\";\r\nimport classes from \"./NavigationItem.module.css\";\r\nconst navaigationItem = (props) => (\r\n  <li className={classes.NavigationItem}>\r\n    <a href={props.link} className={props.active ? classes.active : null}>\r\n      {props.children}\r\n    </a>\r\n  </li>\r\n);\r\n\r\nexport default navaigationItem;\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\nconst navigationItems = (props) => (\r\n  <ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/\" active>\r\n      Home\r\n    </NavigationItem>\r\n    <NavigationItem link=\"/\">API Documentation</NavigationItem>\r\n  </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from \"react\";\r\nimport classes from \"./DrawerToggle.module.css\";\r\n\r\nconst drawerToggle = (props) => (\r\n  <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\nexport default drawerToggle;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\nconst toolbar = (props) => (\r\n  <header className={classes.Toolbar}>\r\n    <DrawerToggle clicked={props.drawerToggleClicked} />\r\n    <div className={classes.Logo}>\r\n      <h1 style={{ color: \"#fff\" }}>Short.ly</h1>\r\n    </div>\r\n    <nav className={classes.DesktopOnly}>\r\n      <NavigationItems />\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst backdrop = (props) =>\r\n  props.show ? (\r\n    <div className={classes.Backdrop} onClick={props.clicked}></div>\r\n  ) : null;\r\n\r\nexport default backdrop;\r\n","import React from \"react\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Aux from \"../../../hoc/Auxilary/Auxilary\";\r\nconst sideDrawer = (props) => {\r\n  let attatchedClasses = [classes.SideDrawer, classes.Close];\r\n  if (props.open) {\r\n    attatchedClasses = [classes.SideDrawer, classes.Open];\r\n  }\r\n  return (\r\n    <Aux>\r\n      <Backdrop show={props.open} clicked={props.closed} />\r\n      <div className={attatchedClasses.join(\" \")}>\r\n        <div className={classes.Logo}></div>\r\n        <nav>\r\n          <NavigationItems />\r\n        </nav>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { Component } from \"react\";\r\nimport Aux from \"../Auxilary/Auxilary\";\r\nimport classes from \"./Layout.module.css\";\r\nimport Toolbar from \"../../components/Navigation/Toolbar/Toolbar\";\r\nimport SideDrawer from \"../../components/Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false,\r\n  };\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { showSideDrawer: !prevState.showSideDrawer };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n        <SideDrawer\r\n          open={this.state.showSideDrawer}\r\n          closed={this.sideDrawerClosedHandler}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./ShortPanel.module.css\";\r\nimport CopytoClipboard from \"react-copy-to-clipboard\";\r\n\r\nclass CopyPanel extends Component {\r\n  state = {\r\n    copied: false,\r\n  };\r\n  onCopy = () => {\r\n    this.setState({ copied: true });\r\n  };\r\n  onChange = ({ target: { value } }) => {\r\n    this.setState({ value, copied: false });\r\n  };\r\n\r\n  render() {\r\n    let p = (\r\n      <div\r\n        className={classes.ShortDiv}\r\n        onCopy={this.onCopy}\r\n        text={this.props.shortUrl}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          name=\"longURL\"\r\n          value={!this.props.shortUrl ? \"Loading...\" : this.props.shortUrl}\r\n          className={classes.ShortInput}\r\n          onChange={this.onChange}\r\n        />\r\n        <CopytoClipboard onCopy={this.onCopy} text={this.props.shortUrl}>\r\n          <button className={classes.ShortButton}>\r\n            {this.state.copied ? <span>Copied</span> : <span>Copy</span>}\r\n          </button>\r\n        </CopytoClipboard>\r\n      </div>\r\n    );\r\n\r\n    return p;\r\n  }\r\n}\r\n\r\nexport default CopyPanel;\r\n","import React from \"react\";\r\nimport Va2 from \"../../assets/images/va.svg\";\r\nimport classes from \"./VectorArt.module.css\";\r\n\r\nconst vectorArt = () => (\r\n  <div className={classes.VectorArt}>\r\n    <div className={classes.Jumbo}>\r\n      <h3 style={{ color: \"#26de81\" }}>\r\n        <span style={{ color: \"#ff7675\" }}>Create click worthy</span> Links\r\n      </h3>\r\n      <p style={{ color: \"#a5b1c2\" }}>\r\n        Shorten your urls on the go with Shortly URL Microservice{\" \"}\r\n      </p>\r\n    </div>\r\n    <img src={Va2} alt=\"MyBurger\" />\r\n  </div>\r\n);\r\n\r\nexport default vectorArt;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./CopyPanel.module.css\";\r\nimport axios from \"axios\";\r\nimport ShortPanel from \"./ShortPanel/ShortPanel\";\r\nimport VectorArt from \"../VectorArt/VectorArt\";\r\nimport Backdrop from \"..//UI/Backdrop/Backdrop\";\r\nimport backdrop from \"..//UI/Backdrop/Backdrop\";\r\n\r\nclass CopyPanel extends Component {\r\n  state = {\r\n    longURL: \"\",\r\n    isShortPresent: false,\r\n    shortUrl: \"\",\r\n    copied: false,\r\n  };\r\n\r\n  postDataHandler = () => {\r\n    const longURL = {\r\n      longUrl: this.state.longURL,\r\n    };\r\n\r\n    if (this.state.longURL === \"\") {\r\n      console.log(\"Empty\");\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({ isShortPresent: true });\r\n    axios\r\n      .post(\"https://shortly86505.herokuapp.com/api/url/shorten\", longURL)\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ shortUrl: response.data.shortUrl });\r\n      });\r\n  };\r\n\r\n  clearDataHandler = () => {\r\n    this.setState({ longURL: \"\" });\r\n  };\r\n\r\n  onCopy = () => {\r\n    this.setState({ copied: true });\r\n  };\r\n  onChange = ({ target: { value } }) => {\r\n    this.setState({ value, copied: false });\r\n  };\r\n  render() {\r\n    let form = (\r\n      <div className={classes.Form}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"longURL\"\r\n          placeholder=\"Shorten your Link\"\r\n          onChange={(event) => this.setState({ longURL: event.target.value })}\r\n        />\r\n        <button onClick={this.postDataHandler}>Shorten</button>\r\n      </div>\r\n    );\r\n\r\n    if (this.state.isShortPresent) {\r\n      form = (\r\n        <React.Fragment>\r\n          <div className={classes.Form}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"longURL\"\r\n              placeholder=\"Shorten your Link\"\r\n              value={this.state.longURL}\r\n              onChange={(event) =>\r\n                this.setState({ longURL: event.target.value })\r\n              }\r\n            />\r\n            <button\r\n              onClick={\r\n                this.state.longURL !== \"\"\r\n                  ? this.clearDataHandler\r\n                  : this.postDataHandler\r\n              }\r\n            >\r\n              {this.state.longURL === \"\" ? (\r\n                <span>Shorten</span>\r\n              ) : (\r\n                <span>Clear</span>\r\n              )}\r\n            </button>\r\n            <ShortPanel\r\n              copied={this.state.copied}\r\n              shortUrl={this.state.shortUrl}\r\n            />\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Backdrop />\r\n        <VectorArt />\r\n        {form}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CopyPanel;\r\n","import React, { Component } from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport CopyPanel from \"../src/components/CopyPanel/CopyPanel\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <CopyPanel />\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__6XsC0\",\"Open\":\"SideDrawer_Open__1dglG\",\"Close\":\"SideDrawer_Close__2nFCN\",\"Logo\":\"SideDrawer_Logo__71EJm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__krwZW\",\"Logo\":\"Toolbar_Logo__1bidd\",\"DesktopOnly\":\"Toolbar_DesktopOnly__1lx6U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ShortDiv\":\"ShortPanel_ShortDiv__2b_nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3bOct\",\"active\":\"NavigationItem_active__2whUO\"};"],"sourceRoot":""}